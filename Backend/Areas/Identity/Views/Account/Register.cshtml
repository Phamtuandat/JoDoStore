@using Microsoft.AspNetCore.Identity;
@inject SignInManager<User> SignInManager

@model RegisterViewModel
@{
}



<body class="bg-gradient-primary">

    <div class="container">

        <div class="card o-hidden border-0 shadow-lg my-5">
            <div class="card-body p-0">
                <!-- Nested Row within Card Body -->
                <div class="row">
                    <div class="col-lg-5 d-none d-lg-block bg-register-image"></div>
                    <div class="col-lg-7">
                        <div class="p-5">
                            <div class="text-center">
                                <h1 class="h4 text-gray-900 mb-4">Create an Account!</h1>
                            </div>
                            <form asp-controller="Account" asp-action="Register"
                                asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" role="form" class="user">
                                <div class="form-group row">
                                    <div class="col-sm-6 mb-3 mb-sm-0">
                                        <input asp-for="FirstName" type="text" class="form-control form-control-user"
                                            id="exampleFirstName" placeholder="First Name">
                                        <span asp-validation-for="FirstName" class="text-danger"></span>
                                    </div>
                                    <div class="col-sm-6">
                                        <input asp-for="LastName" type="text" class="form-control form-control-user"
                                            id="exampleLastName" placeholder="Last Name">
                                        <span asp-validation-for="LastName" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <input asp-for="Email" type="email" class="form-control form-control-user"
                                        id="exampleInputEmail" placeholder="Email Address">
                                    <span asp-validation-for="Email" class="text-danger"></span>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-6 mb-3 mb-sm-0">
                                        <input asp-for="Password" type="password" class="form-control form-control-user"
                                            id="exampleInputPassword" placeholder="Password">
                                        <span asp-validation-for="Password" class="text-danger"></span>
                                    </div>
                                    <div class="col-sm-6">
                                        <input asp-for="ConfirmPassword" type="password"
                                            class="form-control form-control-user" id="exampleRepeatPassword"
                                            placeholder="Repeat Password">
                                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary btn-user btn-block">
                                    Register Account
                                </button>
                            </form>
                            <hr>


                            @{
                                var schemes = await SignInManager.GetExternalAuthenticationSchemesAsync();
                                var loginProviders = schemes.ToList();
                                var googleLogingProvider = loginProviders.FirstOrDefault(c => c.Name == "Google");
                                <form asp-controller="Account" asp-action="ExternalLogin"
                                asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal"
                                role="form">
                                    <button title="Log in using your @googleLogingProvider.Name account" type="submit"
                                        value="@googleLogingProvider.Name" name="provider"
                                        class="btn btn-google btn-user btn-block">
                                        <i class="fab fa-google fa-fw"></i> Register with Google
                                    </button>
                                    <a href="index.html" class="btn btn-facebook btn-user btn-block">
                                        <i class="fab fa-facebook-f fa-fw"></i> Register with Facebook
                                    </a>
                                </form>
                            }
                            <hr>
                            <div class="text-center">
                                <a class="small" asp-action="Login" asp-controller="Account">Already have an account?
                                    Login!</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>



</body>
@*

    <div class="row">
    <div class="col-md-8">
    <section>
    <form class="form-horizontal" asp-controller="Account" asp-action="Register"
    asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" role="form">
    <h4>Tạo tài khoản mới trên website.</h4>
    <hr />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
    <label asp-for="UserName" class="col-md-10 control-label"></label>
    <div class="col-md-10">
    <input asp-for="UserName" class="form-control" />
    <span asp-validation-for="UserName" class="text-danger"></span>
    </div>
    </div>
    <div class="form-group">
    <label asp-for="Email" class="col-md-10 control-label"></label>
    <div class="col-md-10">
    <input asp-for="Email" class="form-control" />
    <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    </div>
    <div class="form-group">
    <label asp-for="Password" class="col-md-10 control-label"></label>
    <div class="col-md-10">
    <input asp-for="Password" class="form-control" />
    <span asp-validation-for="Password" class="text-danger"></span>
    </div>
    </div>
    <div class="form-group">
    <label asp-for="ConfirmPassword" class="col-md-10 control-label"></label>
    <div class="col-md-10">
    <input asp-for="ConfirmPassword" class="form-control" />
    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>
    </div>
    <div class="form-group">
    <div class="col-md-offset-2 col-md-10">
    <button type="submit" class="btn btn-primary">Đăng ký</button>
    </div>
    </div>
    </form>
    </section>
    </div> *@
@* <div class="col-md-4">
    <section>
    <h4>Đăng nhập bằng tài khoản.</h4>
    <hr />
    @{
    @* var schemes = await SignInManager.GetExternalAuthenticationSchemesAsync(); *@
@* var loginProviders = schemes.ToList(); *@
@* if (loginProviders.Count == 0)
    {
    <div>
    <p>
    Ứng dụng chưa hỗ trợ đăng nhập từ tài khoản ngoài
    </p>
    </div>
    }
    else
    {
    <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]"
    method="post" class="form-horizontal" role="form">
    <div>
    <p>
    @foreach (var provider in loginProviders)
    {
    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name"
    title="Log in using your @provider.Name account">@provider.Name</button>

    }
    </p>
    </div>
    </form>
    }
    }
    </section>
    </div> *@
@* </div> *@



@section Scripts {
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
