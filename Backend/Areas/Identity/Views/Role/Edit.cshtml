@using App.Areas.Identity.Models.RoleViewModels

@model EditRoleModel

@{
    ViewData["Title"] = "Update Role";
}
<h2>@ViewData["Title"]</h2>
<partial name="_AlertMessage"></partial>

<hr>

<div class="row">
    <div class="col-md-6">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="Update" class="btn btn-primary" />
                <a class="btn btn-primary" asp-action="Index">list of roles</a>
            </div>
        </form>
        <hr>
        <p>Role's (claim):
            <a asp-action="AddRoleClaim" asp-route-roleid="@Model.Role.Id">+ Add claim</a>
        </p>
        @if (Model.Claims.Count > 0)
        {
                <ul>
                @foreach (var claim in Model.Claims)
                {
                            <li>
                                <a asp-action="EditRoleClaim" asp-route-claimid="@claim.Id">
                            @claim.ClaimType : @claim.ClaimValue
                                </a>


                            </li>
                }
                </ul>
        }
    </div>
</div>


@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@{
    _adminMenuService.SetActive("Role", "Edit", "Identity");
}

@section Sidebar{
@Html.Raw(_adminMenuService.RenderHtml());
}