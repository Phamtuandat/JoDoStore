@using App.Areas.Identity.Models.UserViewModels

@model UserListModel
@{

    ViewData["Title"] = "List of users";
}
<h2>@ViewData["Title"]</h2>
<partial name="_AlertMessage"></partial>
<p>User Count: @Model.totalUsers</p>

<table class="table">
    <tr>
        <th>User Name</th>
        <th>Role</th>
        <th>Task</th>
    </tr>
    @foreach (var user in Model.users)

    {
        <tr>
            <td>@user.UserName</td>
            <td>@if (string.IsNullOrEmpty(user.RoleNames))
                {
                    <a class="text-dark" asp-action="AddRole" asp-route-id="@user.Id">+ Add roles</a>
                }
                else
                {
                    <a asp-action="AddRole" asp-route-id="@user.Id">@user.RoleNames</a>
                }
            </td>
            <td><a class="btn btn-success btn-sm" asp-action="SetPassword" asp-route-id="@user.Id">Change password</a>
            </td>
        </tr>

    }
</table>
@{
    var pagingmodel = new PagingModel()

    {
        currentpage = Model.currentPage,
        countpages = Model.countPages,
        generateUrl = (int? p) => Url.Action("Index", new { p = p })
    };
}

<partial name="_PagingXTL" model="@pagingmodel" />
@{
    _adminMenuService.SetActive("Sidebar", "Index", "Identity");
}

@section Sidebar{
@Html.Raw(_adminMenuService.RenderHtml());
}